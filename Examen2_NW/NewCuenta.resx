<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wfD0TivjhfmnAAAAABJRU5ErkJggg==
</value>
  </data>
</root>